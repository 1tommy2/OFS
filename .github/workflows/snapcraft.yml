name: snapcraft

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  craft:
    runs-on: ubuntu-latest
       
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 1

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        with:
            use_lxd: true
    
      - name: build_snap
        run: sg lxd -c 'snapcraft --use-lxd'
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: "*.snap"
          asset_name: OFS-64x_${{github.ref}}@${{github.sha}}.snap
          asset_content_type: application/octet-stream
      
      #- uses: actions/upload-artifact@v2
      #  with:
      #    name: snap
      #    path: "*.snap"
